upstream backend_assets {
    server kenyaemr_emr:8081;
}

server {
    listen 8081;
    server_name _;
    root /usr/local/tomcat/frontend;

    # CORS configuration
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
    add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

    location /openmrs/ {
        proxy_pass http://backend_assets;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_cache_valid 200 60m;
        proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;

        # CORS headers for proxied requests
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
    }

    # accessing legacy
    location ~ ^/openmrs/(kenyaemr|reports|admin|ms|scripts|moduleResources|dwr) {
        proxy_pass http://backend_assets;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # proper redirections
    location / {
        tcp_nopush on;
        keepalive_timeout 65;
        proxy_cache_valid 200 60m;
        proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
        try_files $uri /index.html;
    }

    # CSS files
    location ~* \.css$ {
        add_header Content-Type text/css;
        proxy_cache_valid 200 60m;
        proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
    }

    # JavaScript files
    location ~* \.js$ {
        add_header Content-Type application/javascript;
        proxy_cache_valid 200 60m;
        proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
    }

    location ^~ /openmrs/spa/ {
        alias /var/lib/OpenMRS/frontend;
        try_files $uri /var/lib/OpenMRS/frontend/index.html;

        # Rewrite to check assets from root
        location ~* ^/openmrs/spa/(.+\.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|json|eot))$ {
            sendfile on;
            sendfile_max_chunk 1m;
            # Cache Prevention Start
            proxy_ignore_headers Cache-Control;
            add_header Last-Modified $date_gmt;
            add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
            if_modified_since off;
            expires off;
            etag off;
            proxy_cache_valid 200 60m;
            proxy_cache_use_stale error timeout http_500 http_502 http_503 http_504;
            try_files /$1 =404;
        }
    }

    location = / {
        rewrite ^ /openmrs/ permanent;
    }

    location = /openmrs/spa {
        rewrite ^ /openmrs/spa/ permanent;
    }

    location = /openmrs/spaa {
        rewrite ^ /openmrs/spa/ permanent;
    }

    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;

    error_log /var/log/nginx/openmrs_error.log;
    access_log /var/log/nginx/openmrs_access.log;
}